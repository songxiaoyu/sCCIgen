[{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Interface.html","id":"open-the-r-shiny-interface","dir":"Articles","previous_headings":"","what":"Open the R Shiny interface","title":"Running a simulation using the interactive interface","text":"R (R Studio), open R Shiny interface running: show three tasks choose :","code":"# Set up to your working directory  setwd(\"~path\")  # Open the interface library(sCCIgen) run_interactive_sCCIgen()"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Interface.html","id":"task-1-i-want-to-download-a-pre-simulated-srt-dataset-","dir":"Articles","previous_headings":"Open the R Shiny interface","what":"Task 1: I want to download a pre-simulated SRT dataset.","title":"Running a simulation using the interactive interface","text":"sCCIgen provides three pre-simulated datasets. can quickly check data format explore analyses spending efforts learning package simulating data. datasets simulated based normal breast snRNAseq, mouse brain SeqFISH+, human ovarian cancer MERFISH. , select one example data downloaded working directory.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Interface.html","id":"task-2-i-want-to-create-a-parameter-file-","dir":"Articles","previous_headings":"Open the R Shiny interface","what":"Task 2: I want to create a parameter file.","title":"Running a simulation using the interactive interface","text":"select Task 2, sCCIgen first walk (1) selection reference dataset, (2) additional parameter determination questions help generate parameter file. Playing decoy data may help get familiar simulator, spending little time waiting simulation results. simulation based real datasets, users can also use built-real data selection (5-7) upload input data selecting “user input”.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Interface.html","id":"task-3-i-have-a-parameter-file-and-want-to-run-a-simulation-","dir":"Articles","previous_headings":"Open the R Shiny interface","what":"Task 3: I have a parameter file and want to run a simulation.","title":"Running a simulation using the interactive interface","text":"Finally, users parameter file can conduct simulations. Just tell sCCIgen path parameter file, provide simulated data documentation!","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT.html","id":"load-r-package","dir":"Articles","previous_headings":"","what":"Load R package","title":"Running a simulation based on SRT data","text":"","code":"library(sCCIgen)"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT.html","id":"load-and-clean-sample-data","dir":"Articles","previous_headings":"","what":"Load and clean sample data","title":"Running a simulation based on SRT data","text":"Download sample data https://github.com/songxiaoyu/sCCIgen_data/tree/main/input_data","code":"load(\"SeqFishPlusCortex_2025_expr.Rdata\") load(\"SeqFishPlusCortex_2025_spatial.Rdata\") anno <- colnames(expr)  dim(expr) expr[1:3, 1:3] dim(spatial)"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT.html","id":"analysis-of-the-existing-data-to-provide-insights-into-the-parameters-of-the-simulation","dir":"Articles","previous_headings":"","what":"Analysis of the existing data to provide insights into the parameters of the simulation","title":"Running a simulation based on SRT data","text":"Users can split sCCIgen simulation (1)  model fitting  (2)  simulation using fitted model user-provided parameters  steps expedite simulations. especially helpful number genes /cells large users want run simulation . splitting simulation two steps, users can estimate model parameters save results multiple use.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT.html","id":"task-1-estimate-model-parameters-from-the-snrnaseq-for-simulation","dir":"Articles","previous_headings":"3 Analysis of the existing data to provide insights into the parameters of the simulation","what":"Task 1: Estimate model parameters from the snRNAseq for simulation","title":"Running a simulation based on SRT data","text":"part fit expression data. sim_method==“copula”, fit gene marginal distribution gene-gene correlation. sim_method==“ind”, fit gene marginal distribution. Note: number genes cells large, model fitting may take time. suggested select reasonable sample size (e.g. <10000 per cell type) model fitting, cells may needed improve estimation. Similarly, genes extremely zero-inflated, narrowing simulation reasonably variable genes option.","code":"# model fitting w/o gene-gene correlation (fast but less accurate estimation) ModelEst <- Est_ModelPara(expr = expr,                            anno = anno,                            sim_method = \"ind\",                           ncores = 10)  saveRDS(ModelEst, file = \"SeqFishPlusCortex_fit_wo_cor.RDS\")  # model fitting with gene-gene correlation ModelEst <- Est_ModelPara(expr = expr,                            anno = anno,                            sim_method = \"copula\",                            ncores = 10)  saveRDS(ModelEst, file = \"SeqFishPlusCortex_fit_w_cor.RDS\")"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT.html","id":"task-2-estimate-ccis-in-the-input-data-following-the-existing-giotto-pipeline","dir":"Articles","previous_headings":"3 Analysis of the existing data to provide insights into the parameters of the simulation","what":"Task 2: Estimate CCIs in the input data following the existing Giotto pipeline","title":"Running a simulation based on SRT data","text":"","code":"library(Giotto) # Preprocess data with Giotto pipeline db <- preprocessGiotto(expr_data = expr,                         spatial_data = spatial,                         run_hvg = TRUE,                        run_Dist_network = TRUE,                        dis.cut=150) db # Estimate cell-cell attraction and inhibition patterns, and save in pre-defined folder cellProximityTable(gobject = db,                     abs_enrichm = 0.3,                     p_adj = 0.05,                    spatial_network_name = \"distance_based_network\",                    save.unfiltered=TRUE,                    output_file = \"est_CCI_dist_dist.csv\",                    seed=123)  # Estimate gene expressions of cells impacted by their neighbors, and save in pre-defined folder ExprDistanceTable(gobject = db,                    in_hvg = TRUE,                    region_specific = FALSE,                    spatial_network_name = \"distance_based_network\",                   abs_log2fc_ICG = 0.3,                    p_adj = 0.05,                   output_file = \"est_CCI_dist_expr.csv\",                   seed=123)  # Estimate gene expressions of cells impacted by gene expressions of neighboring cells, narrow to #  known pairs, such as ligand and receptor pairs, and save in pre-defined folder ExprExprTable(gobject = db,                database = \"mouse\",                region_specific = FALSE,                spatial_network_name = \"distance_based_network\",               p_adj = 0.05,                abs_log2fc_LR = 0.2,               output_file = \"est_CCI_expr_expr.csv\",               seed=123)"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT.html","id":"create-a-parameter-file","dir":"Articles","previous_headings":"","what":"Create a parameter file","title":"Running a simulation based on SRT data","text":"Users need create parameter file. sample parameter file snRNAseq based simulation downloading filling perform simulations.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT.html","id":"perform-the-entire-simulation-and-save-the-results-","dir":"Articles","previous_headings":"","what":"Perform the entire simulation and save the results.","title":"Running a simulation based on SRT data","text":"Assuming already parameter file, can run entire simulation using codes like :","code":"# Simulate default data - using existing cells but simulate expression with ground truth input <- \"SeqFishPlus_default.tsv\"  ParaSimulation(input = input, ModelFitFile = model_param_path)  # Simulate new cells and genes where genes have region specific expressions input <- \"SeqFishPlus_RegionDiffGenes.tsv\"  ParaSimulation(input = input, ModelFitFile = model_param_path)  # Simulate new cells and genes where expression of genes are associated with distances to other cells. input <- \"SeqFishPlus_ICGs.tsv\"  ParaSimulation(input = input, ModelFitFile = model_param_path)  # Simulate new cells and genes where expression of genes are associated with distances to other cells. input <- \"SeqFishPlus_LR.tsv\"  ParaSimulation(input = input, ModelFitFile = model_param_path)"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT_region.html","id":"load-r-package","dir":"Articles","previous_headings":"","what":"Load R package","title":"Running a simulation based on SRT data region","text":"","code":"library(sCCIgen)"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT_region.html","id":"load-and-clean-sample-data","dir":"Articles","previous_headings":"","what":"Load and clean sample data","title":"Running a simulation based on SRT data region","text":"Download sample data https://github.com/songxiaoyu/sCCIgen_data/tree/main/input_data","code":"load(\"SeqFishPlusCortex_2025_expr.Rdata\") load(\"SeqFishPlusCortex_2025_spatial.Rdata\")  dim(expr) expr[1:3, 1:3] dim(spatial)  anno <- colnames(expr) region <- spatial[, 4]"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT_region.html","id":"analysis-of-the-existing-data-to-provide-insights-into-the-parameters-of-the-simulation","dir":"Articles","previous_headings":"","what":"Analysis of the existing data to provide insights into the parameters of the simulation","title":"Running a simulation based on SRT data region","text":"Users can split sCCIgen simulation (1)  model fitting  (2)  simulation using fitted model user-provided parameters  steps expedite simulations. especially helpful number genes /cells large users want run simulation . splitting simulation two steps, users can estimate model parameters save results multiple use.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT_region.html","id":"task-1-estimate-model-parameters-from-the-snrnaseq-for-simulation","dir":"Articles","previous_headings":"3 Analysis of the existing data to provide insights into the parameters of the simulation","what":"Task 1: Estimate model parameters from the snRNAseq for simulation","title":"Running a simulation based on SRT data region","text":"part fit expression data. sim_method==“copula”, fit gene marginal distribution gene-gene correlation. sim_method==“ind”, fit gene marginal distribution. Note: number genes cells large, model fitting may take time. suggested select reasonable sample size (e.g. <10000 per cell type) model fitting, cells may needed improve estimation. Similarly, genes extremely zero-inflated, narrowing simulation reasonably variable genes option.","code":"# model fitting ModelEst <- Est_ModelPara(expr = expr,                            anno = anno,                            sim_method = \"ind\",                            region = region,                            ncores = 10)  saveRDS(ModelEst, file = \"SeqFishPlusCortex_fit_wo_cor_region.RDS\")"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT_region.html","id":"task-2-estimate-ccis-in-the-input-data-following-the-existing-giotto-pipeline","dir":"Articles","previous_headings":"3 Analysis of the existing data to provide insights into the parameters of the simulation","what":"Task 2: Estimate CCIs in the input data following the existing Giotto pipeline","title":"Running a simulation based on SRT data region","text":"","code":"library(Giotto)  # Preprocess data with Giotto pipeline db <- preprocessGiotto(expr_data = expr,                         spatial_data = spatial,                         run_hvg = TRUE,                        run_kNN_network = TRUE,                        run_Delaunay_network = TRUE)  # Estimate cell-cell attraction and inhibition patterns, and save in  # pre-defined folder cellProximityTable(gobject = db,                     abs_enrichm = 0.3,                     p_adj = 0.05,                    output_file = \"est_CCI_dist_dist_region.csv\")  # Estimate gene expressions of cells impacted by their neighbors, and save in # pre-defined folder ExprDistanceTable(gobject = db,                    in_hvg = TRUE,                    region_specific = TRUE,                    abs_log2fc_ICG = 0.3,                    p_adj = 0.05,                   output_file = \"est_CCI_dist_expr_region.csv\")  # Estimate gene expressions of cells impacted by gene expressions of neighboring # cells, narrow to known pairs, such as ligand and receptor pairs, and save in # pre-defined folder ExprExprTable(gobject = db,                database = \"mouse\",                region_specific = TRUE,                p_adj = 0.05,                abs_log2fc_LR = 0.3,               output_file = \"est_CCI_expr_expr_region.csv\")"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT_region.html","id":"task-3-estimate-spatial-region-specific-genes","dir":"Articles","previous_headings":"3 Analysis of the existing data to provide insights into the parameters of the simulation","what":"Task 3: Estimate spatial region specific genes","title":"Running a simulation based on SRT data region","text":"","code":"# Estimate spatial region specific genes. SpatialTable(gobject = db,               top_num = 2,               fdr_cut = 0.05,               output_file = \"est_CCI_expr_expr_region.csv\")"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT_region.html","id":"create-a-parameter-file","dir":"Articles","previous_headings":"","what":"Create a parameter file","title":"Running a simulation based on SRT data region","text":"Users need create parameter file. sample parameter file snRNAseq based simulation downloading filling perform simulations.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_SRT_region.html","id":"perform-the-entire-simulation-and-save-the-results","dir":"Articles","previous_headings":"","what":"Perform the entire simulation and save the results","title":"Running a simulation based on SRT data region","text":"Assuming already parameter file, can run entire simulation using codes like :","code":"model_param_path <- \"SeqFishPlusCortex_fit_wo_cor_region.RDS\"  input <- \"SeqFishPlus_Region_AllPattern.tsv\"  ParaSimulation(input = input, ModelFitFile = model_param_path)"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_snRNAseq.html","id":"load-r-package","dir":"Articles","previous_headings":"","what":"Load R package","title":"Running a simulation based on snRNAseq data","text":"","code":"library(sCCIgen)"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_snRNAseq.html","id":"load-and-clean-sample-data","dir":"Articles","previous_headings":"","what":"Load and clean sample data","title":"Running a simulation based on snRNAseq data","text":"Download sample data https://github.com/songxiaoyu/sCCIgen_data/tree/main/input_data","code":"load(\"Github/sCCIgen_data/input_data/snRNAseq_breast_2025_expr.Rdata\") anno <- colnames(expr)  dim(expr) expr[1:3, 1:3]"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_snRNAseq.html","id":"analysis-of-the-existing-data-to-provide-insights-into-the-parameters-of-the-simulation","dir":"Articles","previous_headings":"","what":"Analysis of the existing data to provide insights into the parameters of the simulation","title":"Running a simulation based on snRNAseq data","text":"Users can split sCCIgen simulation (1)  model fitting  (2)  simulation using fitted model user-provided parameters  steps expedite simulations. especially helpful number genes /cells large users want run simulation . splitting simulation two steps, users can estimate model parameters save results multiple use.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_snRNAseq.html","id":"task-1-estimate-model-parameters-from-the-snrnaseq-for-simulation","dir":"Articles","previous_headings":"3 Analysis of the existing data to provide insights into the parameters of the simulation","what":"Task 1: Estimate model parameters from the snRNAseq for simulation","title":"Running a simulation based on snRNAseq data","text":"part fit expression data. sim_method==“copula”, fit gene marginal distribution gene-gene correlation. sim_method==“ind”, fit gene marginal distribution. Note: number genes cells large, model fitting may take time. suggested select reasonable sample size (e.g. <10000 per cell type) model fitting, cells may needed improve estimation. Similarly, genes extremely zero-inflated, narrowing simulation reasonably variable genes option. Note: snRNAseq used input dataset, users estimate cells’ spatial patterns interactions data. Users can specify parameters simulation build additional variations.","code":"# model fitting ModelEst <- Est_ModelPara(expr = expr,                            anno = anno,                            sim_method = \"copula\",                            ncores = 10)  saveRDS(ModelEst, file = \"snRNAseq_breast_2025_fit_w_cor.RDS\")"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_snRNAseq.html","id":"create-a-parameter-file","dir":"Articles","previous_headings":"","what":"Create a parameter file","title":"Running a simulation based on snRNAseq data","text":"Users need create parameter file. sample parameter file snRNAseq based simulation downloading filling perform simulations.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_snRNAseq.html","id":"run-simulation","dir":"Articles","previous_headings":"","what":"Run simulation","title":"Running a simulation based on snRNAseq data","text":"","code":"# load parameter file input <- \"scRNAseq_default.tsv\"  # The default parameter file does not provide estimated model parameters. # Run simulation, with model parameters added in with ModelFitFile. model_param_path <- \"snRNAseq_breast_2025_fit_w_cor.RDS\"  ParaSimulation(input = input, ModelFitFile = model_param_path)  # Run simulation including the estimation of the model parameters. ParaSimulation(input = input)"},{"path":[]},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_snRNAseq.html","id":"task-1-plot-the-spatial-regions-simulated-by-sccigen","dir":"Articles","previous_headings":"6 Run nested functions to obtain simulation byproducts","what":"Task 1: Plot the spatial regions simulated by sCCIgen","title":"Running a simulation based on snRNAseq data","text":"users interested obtain simulated regions, nested function RandomRegionWindow can used folllows:","code":"# The parameter file specifies that nRegion=2 and seed=1234 win <- RandomRegionWindow(nRegion = 2, seed = 1234)  plot(win$window[[1]], col = \"pink\") plot(win$window[[2]], col = \"blue\", add = TRUE)"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_unpaired.html","id":"load-r-package","dir":"Articles","previous_headings":"","what":"Load R package","title":"Running a simulation based on unpaired expression and spatial data","text":"","code":"library(sCCIgen)"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_unpaired.html","id":"load-and-clean-sample-data","dir":"Articles","previous_headings":"","what":"Load and clean sample data","title":"Running a simulation based on unpaired expression and spatial data","text":"Download sample data https://github.com/songxiaoyu/sCCIgen_data/tree/main/input_data.","code":"# This is a subset of MERFISH OV cancer dataset with 1000 cells' expression and 500 cells spatial map. load(\"Github/sCCIgen_data/input_data/MERFISH_OV_2025_unpaired_expr.Rdata\") load(\"Github/sCCIgen_data/input_data/MERFISH_OV_2025_unpaired_spatial.Rdata\") anno <- colnames(expr)  dim(expr) expr[1:3, 1:3] dim(spatial) # Note: Number of cells in expression data and spatial data are not the same,  # as they are used to mimic data from different experiments."},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_unpaired.html","id":"analysis-of-the-existing-data-to-provide-insights-into-the-parameters-of-the-simulation","dir":"Articles","previous_headings":"","what":"Analysis of the existing data to provide insights into the parameters of the simulation","title":"Running a simulation based on unpaired expression and spatial data","text":"part fit expression data. sim_method==“copula”, fit gene marginal distribution gene-gene correlation. sim_method==“ind”, fit gene marginal distribution. Note: number genes cells large, model fitting may take time. suggested select reasonable sample size (e.g. <10000 per cell type) model fitting, cells may needed improve estimation. Similarly, genes extremely zero-inflated, narrowing simulation reasonbly variable genes option.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_unpaired.html","id":"task-1-estimate-model-parameters-from-the-snrnaseq-for-simulation","dir":"Articles","previous_headings":"3 Analysis of the existing data to provide insights into the parameters of the simulation","what":"Task 1: Estimate model parameters from the snRNAseq for simulation","title":"Running a simulation based on unpaired expression and spatial data","text":"part fit expression data. sim_method==“copula”, fit gene marignal distribution gene-gene correlation. sim_method==“ind”, fit gene marginal distribution. Note: number genes cells large, model fitting may take time. suggested select reasonably large sample size per cell type model fitting.","code":"# model fitting ModelEst <- Est_ModelPara(expr = expr,                            anno = anno,                            sim_method = \"ind\",                            ncores = 10)  saveRDS(ModelEst, file = \"Unpaired_fit_wo_cor.RDS\")"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_unpaired.html","id":"create-a-parameter-file","dir":"Articles","previous_headings":"","what":"Create a parameter file","title":"Running a simulation based on unpaired expression and spatial data","text":"Users need create parameter file. sample parameter file snRNAseq based simulation downloading filling perform simulations.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/Rpackage_unpaired.html","id":"perform-the-entire-simulation-and-save-the-results","dir":"Articles","previous_headings":"","what":"Perform the entire simulation and save the results","title":"Running a simulation based on unpaired expression and spatial data","text":"Assuming already parameter file, can run entire simulation using codes like :","code":"model_param_path <- \"Unpaired_fit_wo_cor.RDS\"  # Simulate default data - using existing cells but simulate expression with ground truth input <- \"MERFISH_default.tsv\"  ParaSimulation(input = input, ModelFitFile = model_param_path)"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/converters.html","id":"convert-sccigen-to-a-giotto-object","dir":"Articles","previous_headings":"","what":"Convert sCCIgen to a Giotto object","title":"Convert sCCIgen to other objects","text":"","code":"g_object <- sCCIgen_to_Giotto(\"path/to/counts_file\", \"path/to/metadata_file\")  g_object An object of class giotto  >Active spat_unit:  cell  >Active feat_type:  rna  dimensions    : 10, 10000 (features, cells) [SUBCELLULAR INFO] [AGGREGATE INFO] expression -----------------------   [cell][rna] raw spatial locations ----------------   [cell] raw   Use objHistory() to see steps and params used"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/converters.html","id":"convert-sccigen-to-a-seurat-object","dir":"Articles","previous_headings":"","what":"Convert sCCIgen to a Seurat object","title":"Convert sCCIgen to other objects","text":"","code":"s_object <- sCCIgen_to_Seurat(\"path/to/counts_file\", \"path/to/metadata_file\")  s_object An object of class Seurat  10 features across 10000 samples within 1 assay  Active assay: Spatial (10 features, 0 variable features)  1 layer present: counts  1 image present: image"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/converters.html","id":"convert-sccigen-to-a-spatialexperiment-object","dir":"Articles","previous_headings":"","what":"Convert sCCIgen to a SpatialExperiment object","title":"Convert sCCIgen to other objects","text":"","code":"se_object <- sCCIgen_to_SpatialExperiment(\"path/to/counts_file\", \"path/to/metadata_file\")  se_object class: SpatialExperiment  dim: 10 10000  metadata(0): assays(1): counts rownames(10): Gene1 Gene2 ... Gene9 Gene10 rowData names(0): colnames(10000): Cell1 Cell2 ... Cell9999 Cell10000 colData names(3): annotation region sample_id reducedDimNames(0): mainExpName: NULL altExpNames(0): spatialCoords names(2) : x y imgData names(0):"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/docker.html","id":"clone-the-docker-image","dir":"Articles","previous_headings":"","what":"Clone the Docker image","title":"Using sCCIgen Docker image","text":"Run following command bash terminal:","code":"docker pull sccigenpackage/sccigen:latest"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/docker.html","id":"place-the-files-that-you-will-use-for-the-simulation-into-a-known-folder","dir":"Articles","previous_headings":"","what":"Place the files that you will use for the simulation into a known folder","title":"Using sCCIgen Docker image","text":"need create directory place expression data files used working sCCIgen. can use terminal command preferred method create new directory. already previous data directory, skip step.","code":"mkdir Documents/my_wd"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/docker.html","id":"start-the-image","dir":"Articles","previous_headings":"","what":"Start the image","title":"Using sCCIgen Docker image","text":"Run following command start interactive sCCIgen image, -v option connect data folder docker working directory read files running RStudio. Note need replace “/path//host” absolute path data directory contains files want docker image access (e.g. Users/joselynchavez/Documents/my_wd/:/home/rstudio/).","code":"docker run -e PASSWORD=mypassword -p 8787:8787 -v /path/on/host:/home/rstudio/ sccigenpackage/sccigen"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/docker.html","id":"open-your-preferred-browser","dir":"Articles","previous_headings":"","what":"Open your preferred browser","title":"Using sCCIgen Docker image","text":"image starts running, open preferred browser look address: Use following credentials sign : user: rstudio password: mypassword","code":"localhost:8787"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/docker.html","id":"load-sccigen","dir":"Articles","previous_headings":"","what":"Load sCCIgen","title":"Using sCCIgen Docker image","text":"Use R commands start running simulations sCCIgen.","code":"library(sCCIgen)"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/installation.html","id":"installation-of-sccigen","dir":"Articles","previous_headings":"","what":"Installation of sCCIgen","title":"Installation","text":"","code":"install.packages(\"devtools\")  devtools::install_github(\"songxiaoyu/sCCIgen\") install.packages(\"remotes\")  remotes::install_github(\"songxiaoyu/sCCIgen\")"},{"path":"https://songxiaoyu.github.io/sCCIgen/articles/installation.html","id":"help","dir":"Articles","previous_headings":"","what":"Help","title":"Installation","text":"Encountering errors? Post issue Giotto GitHub page . Please include version numbers R, sCCIgen, OS use time issue.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xiaoyu Song. Author, maintainer. Joselyn C. Chávez-Fuentes. Author.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Song X, Chávez-Fuentes J (2025). sCCIgen: sCCIgen: high-fidelity spatially resolved transcriptomics data simulator cell-cell interaction studies.. R package version 1.0, https://github.com/songxiaoyu/sCCIgen/, https://songxiaoyu.github.io/sCCIgen/.","code":"@Manual{,   title = {sCCIgen: sCCIgen: A high-fidelity spatially resolved transcriptomics data simulator for cell-cell interaction studies.},   author = {Xiaoyu Song and Joselyn C. Chávez-Fuentes},   year = {2025},   note = {R package version 1.0, https://github.com/songxiaoyu/sCCIgen/},   url = {https://songxiaoyu.github.io/sCCIgen/}, }"},{"path":[]},{"path":"https://songxiaoyu.github.io/sCCIgen/index.html","id":"id_1-introduction","dir":"","previous_headings":"","what":"1. Introduction","title":"sCCIgen: A high-fidelity spatially resolved transcriptomics data simulator for cell-cell interaction studies.","text":"Spatially resolved transcriptomics (SRT) provides invaluable avenue examining cell-cell interactions within native tissue environments. development evaluation analytical tools SRT data necessitate tools generating synthetic datasets known ground truth cell-cell interaction induced features. introduce sCCIgen, novel real-data-based simulator tailored generate high-fidelity SRT data focus cell-cell interactions. sCCIgen preserves transcriptomic spatial characteristics SRT data, comprehensively models various cell-cell interaction features, including cell colocalization, spatial dependence among gene expressions, gene-gene interactions nearby cells.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/index.html","id":"id_2-reference","dir":"","previous_headings":"","what":"2. Reference","title":"sCCIgen: A high-fidelity spatially resolved transcriptomics data simulator for cell-cell interaction studies.","text":"Song, X., et al. sCCIgen: high-fidelity spatially resolved transcriptomics data simulator cell-cell interaction studies. bioRxiv (2025)","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/index.html","id":"id_3-software-instruction","dir":"","previous_headings":"","what":"3. Software Instruction","title":"sCCIgen: A high-fidelity spatially resolved transcriptomics data simulator for cell-cell interaction studies.","text":"installation instruction, documentation, tutorials, examples accessible https://songxiaoyu.github.io/sCCIgen/.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/index.html","id":"id_4-brief-overview-of-simulation-options","dir":"","previous_headings":"","what":"4. Brief overview of simulation options","title":"sCCIgen: A high-fidelity spatially resolved transcriptomics data simulator for cell-cell interaction studies.","text":"Users two options perform SRT simulations using sCCIgen. Depending preference, Users can choose use: Tutorials using interface simulate SRT. Tutorials using R package simulate SRT based snRNAseq data. Tutorials using R package simulate SRT based single-cell SRT data (single region). Tutorials using R package simulate SRT based single-cell SRT data (multiple regions). Tutorials using R package simulate SRT based single-cell expression unpaired spatial data.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Distance.Asso.Pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Add cell-cell expr-distance interaction to a pair of cell types — Add.Distance.Asso.Pattern","title":"Add cell-cell expr-distance interaction to a pair of cell types — Add.Distance.Asso.Pattern","text":"function add type cell-cell interactions pair cell types: expression cell type associated proximity cell type. One can repeat function multiple times add cell-cell interactions many cell type pairs regions.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Distance.Asso.Pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add cell-cell expr-distance interaction to a pair of cell types — Add.Distance.Asso.Pattern","text":"","code":"Add.Distance.Asso.Pattern(   ppp.obj,   sim.count,   r,   perturbed.cell.type,   adjacent.cell.type,   int.dist.threshold = 0.1,   delta.mean = 1,   delta.sd = 0.001,   GeneID = NULL,   PropOfGenes = NULL,   seed = NULL )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Distance.Asso.Pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add cell-cell expr-distance interaction to a pair of cell types — Add.Distance.Asso.Pattern","text":"ppp.obj object class \"ppp\" representing simulated cell locations sim.count Simulated expression counts single-cell expression data, adding additional spatial patterns. r region add spatial pattern. perturbed.cell.type cell type perturbed cell-cell interaction (e.g. microglia). adjacent.cell.type cell type neighbor perturbs cell-cell interaction (e.g. neuron). int.dist.threshold minimal cell-cell distance interaction. delta.mean Expected effect.size (log scale counts). delta.sd Standard deviation effect.size GeneID Affected genes. PropOfGenes Proportion genes impacted cell-cell interaction. used GenePairIDMatrix NULL, random subset genes specified proportion perturbed. seed Seed","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Distance.Asso.Pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add cell-cell expr-distance interaction to a pair of cell types — Add.Distance.Asso.Pattern","text":"SignalSummary: Summary spatial pattern, including type spatial patterns, impacted cell types, perturbed genes, effect sizes. beta.matrix: Effect size gene cell.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Expr.Asso.Pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Add cell-cell expr-expr interaction pattern to a pair of cell types — Add.Expr.Asso.Pattern","title":"Add cell-cell expr-expr interaction pattern to a pair of cell types — Add.Expr.Asso.Pattern","text":"function add cell-cell interactions pair cell types (e.g. neuron-microglia) expression cell type associated expression neighboring cell type. One can repeat function multiple times add cell-cell interactions many cell types.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Expr.Asso.Pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add cell-cell expr-expr interaction pattern to a pair of cell types — Add.Expr.Asso.Pattern","text":"","code":"Add.Expr.Asso.Pattern(   ppp.obj,   sim.count,   r,   perturbed.cell.type,   adjacent.cell.type,   Bidirectional = T,   int.dist.threshold = 0.1,   delta.mean = 1,   delta.sd = 0.001,   GenePairIDMatrix = NULL,   PropOfGenes = NULL,   seed = NULL )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Expr.Asso.Pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add cell-cell expr-expr interaction pattern to a pair of cell types — Add.Expr.Asso.Pattern","text":"ppp.obj object class \"ppp\" representing simulated cell locations sim.count Simulated expression counts single-cell expression data, adding additional spatial patterns. r region add spatial pattern. simulated data multiple regions, r=1. perturbed.cell.type cell type perturbed cell-cell interaction (e.g. microglia). adjacent.cell.type cell type neighbor perturbs cell-cell interaction (e.g. neuron). Bidirectional Whether perturbation directional. int.dist.threshold minimal cell-cell distance interaction. delta.mean Expected effect.size (log scale counts). delta.sd Standard deviation effect.size GenePairIDMatrix Affected gene pairs. PropOfGenes Proportion genes impacted cell-cell interaction. used GenePairIDMatrix NULL, random subset genes specified proportion perturbed. seed Seed","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Expr.Asso.Pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add cell-cell expr-expr interaction pattern to a pair of cell types — Add.Expr.Asso.Pattern","text":"SignalSummary: Summary spatial pattern, including type spatial patterns, impacted cell types, perturbed genes, effect sizes. beta.matrix: Effect size gene cell.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Spatial.Expr.Pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds spatial differential expressed pattern (region-specific effects) to a cell type. — Add.Spatial.Expr.Pattern","title":"Adds spatial differential expressed pattern (region-specific effects) to a cell type. — Add.Spatial.Expr.Pattern","text":"function adds one type spatial differential expressed patterns. function can repeated used add region-specific effects  different regions different cell types.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Spatial.Expr.Pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds spatial differential expressed pattern (region-specific effects) to a cell type. — Add.Spatial.Expr.Pattern","text":"","code":"Add.Spatial.Expr.Pattern(   sim.count,   r,   CellType,   GeneID = NULL,   PropOfGenes = 0.1,   delta.mean = 1,   delta.sd = 0.01,   seed )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Spatial.Expr.Pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds spatial differential expressed pattern (region-specific effects) to a cell type. — Add.Spatial.Expr.Pattern","text":"sim.count Cells points spatial map. r Region index. CellType Cell type index. GeneID Gene(s) index. Default = NULL, random subset genes perturbed based defined spatial patterns. PropOfGenes Proportion genes pattern GeneID provided. delta.mean Mean effect (log count scale). delta.sd SD effect. seed Seed","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Add.Spatial.Expr.Pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds spatial differential expressed pattern (region-specific effects) to a cell type. — Add.Spatial.Expr.Pattern","text":"SignalSummary: Summary spatial pattern, including type spatial patterns, impacted cell types, perturbed genes, effect sizes. beta.matrix: Effect size gene cell.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Est_ModelPara.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Marginal distribution and Gaussian Copula for Gene Expression Matrix — Est_ModelPara","title":"Estimate Marginal distribution and Gaussian Copula for Gene Expression Matrix — Est_ModelPara","text":"Estimate Marginal distribution Gaussian Copula Gene Expression Matrix","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Est_ModelPara.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Marginal distribution and Gaussian Copula for Gene Expression Matrix — Est_ModelPara","text":"","code":"Est_ModelPara(   expr,   anno,   sim_method = c(\"ind\", \"copula\"),   region = NULL,   ncores = 1,   subsetN = NULL )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Est_ModelPara.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Marginal distribution and Gaussian Copula for Gene Expression Matrix — Est_ModelPara","text":"expr Expression levels input data anno Cell type annotation input data sim_method c('ind', 'copula') region description ncores cores parallel computing. subsetN number cells large, one can use estimate expression distribuitons subset cells (e.g. subsetN=2500) per cell type.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Est_ModelPara.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Marginal distribution and Gaussian Copula for Gene Expression Matrix — Est_ModelPara","text":"Estimated Gaussian Copula","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ExprDistanceTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Save cell expression - distance patterns for simulation — ExprDistanceTable","title":"Save cell expression - distance patterns for simulation — ExprDistanceTable","text":"Save cell expression - distance patterns simulation","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ExprDistanceTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save cell expression - distance patterns for simulation — ExprDistanceTable","text":"","code":"ExprDistanceTable(   gobject,   in_hvg = F,   output_file = file.path(getwd(), \"est_CCI_dist_expr.csv\"),   region_specific = F,   abs_log2fc_ICG = 0.25,   p_adj = 0.05,   spatial_network_name = \"distance_based_network\",   seed = NULL )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ExprDistanceTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save cell expression - distance patterns for simulation — ExprDistanceTable","text":"gobject Giotto object, output preprocessGiotto. in_hvg Perform analysis within highly variable genes. output_file Provide path file name save CCI results use sCCIgen. region_specific Perform analysis separately region. abs_log2fc_ICG Effect size threshold saving. p_adj Adjusted p-value threshold (Default = 0.05) saving. spatial_network_name Networks choose. Possible values include \"Delaunay_network\", \"distance_based_network\", \"knn_network\". seed Seed.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ExprExprTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Save cell expression - cell expression association patterns for simulation — ExprExprTable","title":"Save cell expression - cell expression association patterns for simulation — ExprExprTable","text":"Save cell expression - cell expression association patterns simulation","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ExprExprTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save cell expression - cell expression association patterns for simulation — ExprExprTable","text":"","code":"ExprExprTable(   gobject,   database = c(\"mouse\", \"human\", \"external\"),   external_database_path = NULL,   region_specific = F,   spatial_network_name,   p_adj = 0.05,   abs_log2fc_LR = 0.25,   output_file = file.path(getwd(), \"est_CCI_expr_expr.csv\"),   seed = NULL )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ExprExprTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save cell expression - cell expression association patterns for simulation — ExprExprTable","text":"gobject Giotto object, output preprocessGiotto. database Specify databases pairs genes consideration. Possible values include \"mouse\", \"human\", \"external\". \"mouse\" \"human\" ligand-receptor pairs downloaded CellTalkDB. \"external\" used, users also need provide value external_database_path. external_database_path path file name external gene-gene pair database. region_specific Perform analysis separately region. spatial_network_name Networks choose. Possible values include \"Delaunay_network\", \"distance_based_network\", \"knn_network\". p_adj Adjusted p-value threshold (Default = 0.05) saving. abs_log2fc_LR Effect size threshold saving. output_file Provide path file name save CCI results use sCCIgen. seed Seed.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/MergeRegion.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge spatial and expression data from multiple regions — MergeRegion","title":"Merge spatial and expression data from multiple regions — MergeRegion","text":"Merge spatial expression data multiple regions","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/MergeRegion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge spatial and expression data from multiple regions — MergeRegion","text":"","code":"MergeRegion(points.list, expr.list)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/MergeRegion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge spatial and expression data from multiple regions — MergeRegion","text":"points.list points.list list points multiple regions expr.list expr.list list expressions multiple regions","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/MergeRegion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge spatial and expression data from multiple regions — MergeRegion","text":"meta: meta count: count","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaCellsNoST.html","id":null,"dir":"Reference","previous_headings":"","what":"Use parameters to simulate cell location (no existing spatial info) — ParaCellsNoST","title":"Use parameters to simulate cell location (no existing spatial info) — ParaCellsNoST","text":"Use parameters simulate cell location. spatial information provided real data.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaCellsNoST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use parameters to simulate cell location (no existing spatial info) — ParaCellsNoST","text":"","code":"ParaCellsNoST(para, annoseed_list)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaCellsNoST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use parameters to simulate cell location (no existing spatial info) — ParaCellsNoST","text":"para Parameters loaded cleaned parameter file using function ParaDigest. seed_list Seeds simulated data","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaCellsST.html","id":null,"dir":"Reference","previous_headings":"","what":"Use parameters to simulate cell location based on modeling of existing SRT — ParaCellsST","title":"Use parameters to simulate cell location based on modeling of existing SRT — ParaCellsST","text":"Use parameters simulate cell location. fit models existing SRT data simulation.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaCellsST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use parameters to simulate cell location based on modeling of existing SRT — ParaCellsST","text":"","code":"ParaCellsST(para, spatial, seed_list)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaCellsST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use parameters to simulate cell location based on modeling of existing SRT — ParaCellsST","text":"para Parameters loaded cleaned parameter file using function ParaDigest. spatial Cell spatial data (unpaired expression data). seed_list Seeds simulated data","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaDigest.html","id":null,"dir":"Reference","previous_headings":"","what":"Digest the parameter file. — ParaDigest","title":"Digest the parameter file. — ParaDigest","text":"Digest clean parameter file.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaDigest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Digest the parameter file. — ParaDigest","text":"","code":"ParaDigest(input)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaDigest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Digest the parameter file. — ParaDigest","text":"input name input parameter file","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaDigest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Digest the parameter file. — ParaDigest","text":"Updated parameters","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaExistingCellsST.html","id":null,"dir":"Reference","previous_headings":"","what":"Use parameters to simulate cell location (direct output from existing spatial data) — ParaExistingCellsST","title":"Use parameters to simulate cell location (direct output from existing spatial data) — ParaExistingCellsST","text":"Use parameters simulate cell location. directly use existing SRT data.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaExistingCellsST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use parameters to simulate cell location (direct output from existing spatial data) — ParaExistingCellsST","text":"","code":"ParaExistingCellsST(m, spatial)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaExistingCellsST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use parameters to simulate cell location (direct output from existing spatial data) — ParaExistingCellsST","text":"m . simulated data spatial Cell spatial data","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaExpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Simualte gene expression data based on parameters — ParaExpr","title":"Simualte gene expression data based on parameters — ParaExpr","text":"Simualte gene expression data based parameters","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaExpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simualte gene expression data based on parameters — ParaExpr","text":"","code":"ParaExpr(   para,   cell_loc_list,   expr,   region,   seed_list,   model_params = NULL,   ncores = 1 )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaExpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simualte gene expression data based on parameters — ParaExpr","text":"para Parameters loaded cleaned parameter file using function ParaDigest. cell_loc_list Simulated cell location data expr Expression data region Region cell type seed_list Seeds simulated data model_params fitted models genes. ncores . cores simulation CopulaEst Estimated Gaussian Copula function gene-gene correlation. Default=NULL.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaExpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simualte gene expression data based on parameters — ParaExpr","text":"Simulated gene expression data cell.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"(Main Function) Simulate spatially resolved transcriptomics data from a parameter file. — ParaSimulation","title":"(Main Function) Simulate spatially resolved transcriptomics data from a parameter file. — ParaSimulation","text":"function simulate spatially resolved transcriptomics data parameter file. parameter file can generated user interface Docker.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaSimulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Main Function) Simulate spatially resolved transcriptomics data from a parameter file. — ParaSimulation","text":"","code":"ParaSimulation(input, ModelFitFile = NULL)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaSimulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Main Function) Simulate spatially resolved transcriptomics data from a parameter file. — ParaSimulation","text":"input path name parameter file. ModelFitFile Default = NULL, existing models fit distributions input single-cell expression data. Alternatively, models provided, algorithm longer need fit input data faster.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/ParaSimulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Main Function) Simulate spatially resolved transcriptomics data from a parameter file. — ParaSimulation","text":"Simulated data (e.g. count, spatial feature, expression pattern) directly saved computer cloud based path provided parameter file.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Pattern.Adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust the count data for all cells in all regions based on the input spatial patterns — Pattern.Adj","title":"Adjust the count data for all cells in all regions based on the input spatial patterns — Pattern.Adj","text":"Adjust count data regions based input spatial patterns","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Pattern.Adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust the count data for all cells in all regions based on the input spatial patterns — Pattern.Adj","text":"","code":"Pattern.Adj(   sim.count,   pattern.list = NULL,   bond.extreme = T,   keep.total.count = F,   integer = T )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Pattern.Adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust the count data for all cells in all regions based on the input spatial patterns — Pattern.Adj","text":"sim.count Spatial info cell type 1 (e.g. neuron) pattern.list list spatial patterns, can generated Add.Spatial.Expr.Pattern, Add.Distance.Asso.Pattern, Add.Expr.Asso.Pattern. bond.extreme Whether bond extreme high values generated large effect sizes spatial patterns (default = TRUE). TRUE, gene can 10% total counts across genes. keep.total.count additional spatial patterns added, whether rescale expression levels genes keep sequencing depth (default = FALSE). integer Whether keep counts integer (default=TRUE).","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Pattern.Adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust the count data for all cells in all regions based on the input spatial patterns — Pattern.Adj","text":"Updated simulated gene expression counts taking consideration spatial patterns.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/RandomRegionWindow.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random connected region in a window — RandomRegionWindow","title":"Generate random connected region in a window — RandomRegionWindow","text":"function generates random regions unit square.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/RandomRegionWindow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random connected region in a window — RandomRegionWindow","text":"","code":"RandomRegionWindow(nRegion = 3, nGrid = 20, seed = NULL)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/RandomRegionWindow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random connected region in a window — RandomRegionWindow","text":"nRegion nRegion . regions (e.g. nRegion=3) nGrid nGrid . spots x y. seed Random seed.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/RandomRegionWindow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random connected region in a window — RandomRegionWindow","text":"window: window region. area: Area proportion region window.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/SpatialTable.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatialTable — SpatialTable","title":"SpatialTable — SpatialTable","text":"SpatialTable","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/SpatialTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatialTable — SpatialTable","text":"","code":"SpatialTable(   gobject,   top_num = 2,   fdr_cut = 0.05,   output_file = file.path(getwd(), \"est_region_specific_genes.csv\") )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/SpatialTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpatialTable — SpatialTable","text":"gobject Giotto object. top_num Keep top K number genes cell type fdr_cut Keep genes whose FDR less cutoff. output_file output_file","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Use_scDesign2.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate expression profile under no spatial patterns. — Use_scDesign2","title":"Generate expression profile under no spatial patterns. — Use_scDesign2","text":"function uses input parameters simulate expression regions.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Use_scDesign2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate expression profile under no spatial patterns. — Use_scDesign2","text":"","code":"Use_scDesign2(   ppp.obj,   model_params,   expr,   region = NULLL,   depth_simu_ref_ratio = 1,   sim_method = c(\"copula\", \"ind\"),   region_specific_model = NULL,   seed )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Use_scDesign2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate expression profile under no spatial patterns. — Use_scDesign2","text":"ppp.obj Cells points spatial map regions. model_params Provide model parameters including marginal distributions copula (NULL). expr Gene expression (count) reference data. region Cell regions reference data. depth_simu_ref_ratio Relative sequencing depth comparison reference data. sim_method Simulate independent genes using'ind' correlated genes using 'copula'. region_specific_model Whether estimation model differ different regions. seed Seed","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/Use_scDesign2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate expression profile under no spatial patterns. — Use_scDesign2","text":"Simulated expression count data cells regions.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cell.loc.existing.fc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate cell location data by using existing SRT data directly. — cell.loc.existing.fc","title":"Generate cell location data by using existing SRT data directly. — cell.loc.existing.fc","text":"Generate cell location data using existing SRT data directly.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cell.loc.existing.fc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate cell location data by using existing SRT data directly. — cell.loc.existing.fc","text":"","code":"cell.loc.existing.fc(   PointLoc,   PointAnno,   PointRegion,   window_method = \"rectangle\" )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cell.loc.existing.fc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate cell location data by using existing SRT data directly. — cell.loc.existing.fc","text":"PointLoc location input cells x, y axis. PointAnno cell type annotation input cells. PointRegion spatial regions input cells. window_method Method estimating window cells.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cell.loc.fc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate cell location data from parameters. — cell.loc.fc","title":"Generate cell location data from parameters. — cell.loc.fc","text":"function generates cell locations regions.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cell.loc.fc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate cell location data from parameters. — cell.loc.fc","text":"","code":"cell.loc.fc(   N,   win,   cell.prop,   cell.inh.attr.input = NULL,   same.dis.cutoff = 0,   even.distribution.coef = 0,   grid.size.small = 19,   grid.size.large = 45,   seed )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cell.loc.fc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate cell location data from parameters. — cell.loc.fc","text":"N . cells generate. win Spatial window within cells generated. cell.prop Proportion cell cell type generated region. cell.inh.attr.input (Default=NULL). matrix providing cell-cell location attraction inhibition parameters. Example input like: cell.inh.attr.input= cbind(Cell1=c(\"\", \"B\", \"C\"), Cell2=c(\"B\",\"D\",\"E), Strength= c(2, 0, -2)). .dis.cutoff (Default = 0) Cells distance less cutoff considered overlapping cells non-realistic real ST data, one kept. even.distribution.coef (Default =0). higher value, require evenly distributed locations cells, opposed randomly generated locations (Poisson process). grid.size.small (Default =19). levels even distributions cells imposed, parameter needed cut simulation window grids different sizes smooth cell densities. grid.size.large (Default =45). levels even distributions cells imposed, parameter needed cut simulation window grids different sizes smooth cell densities. seed Random seed","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cell.loc.fc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate cell location data from parameters. — cell.loc.fc","text":"Cell location","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cell.loc.model.fc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate cell location data by modeling the spatial information of existing data. — cell.loc.model.fc","title":"Generate cell location data by modeling the spatial information of existing data. — cell.loc.model.fc","text":"Generate cell location data modeling spatial information existing data.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cell.loc.model.fc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate cell location data by modeling the spatial information of existing data. — cell.loc.model.fc","text":"","code":"cell.loc.model.fc(   n,   PointLoc,   PointAnno,   PointRegion,   window_method,   seed = NULL,   cell.inh.attr.input1 = NULL )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cell.loc.model.fc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate cell location data by modeling the spatial information of existing data. — cell.loc.model.fc","text":"n . cells PointLoc location input cells x, y axis. PointAnno cell type annotation input cells. PointRegion spatial regions input cells. window_method Method estimating window cells. seed Random seed.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cellProximityTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Save cell attraction and inhibition patterns for simulation — cellProximityTable","title":"Save cell attraction and inhibition patterns for simulation — cellProximityTable","text":"Save cell attraction inhibition patterns simulation","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cellProximityTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save cell attraction and inhibition patterns for simulation — cellProximityTable","text":"","code":"cellProximityTable(   gobject,   output_file = file.path(getwd(), \"est_CCI_dist_dist.csv\"),   abs_enrichm = 0.3,   p_adj = 0.05,   spatial_network_name = \"Delaunay_network\",   save.unfiltered = F,   seed = NULL )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/cellProximityTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save cell attraction and inhibition patterns for simulation — cellProximityTable","text":"gobject Giotto object, output preprocessGiotto. output_file Provide path file name save CCI results use sCCIgen. abs_enrichm Effect size threshold saving. p_adj Adjusted p-value threshold (Default = 0.05) saving. spatial_network_name Networks choose. Possible values include \"Delaunay_network\", \"distance_based_network\", \"knn_network\". save.unfiltered save parallel table results, unfiltered asb_enrich p_adj. seed Seed.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/connectUp.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign connected regions in a window — connectUp","title":"Assign connected regions in a window — connectUp","text":"function assigns random connected regions square. Used within function RandomRegionWindow.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/connectUp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign connected regions in a window — connectUp","text":"","code":"connectUp(r, nRegion, seed = NULL)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/connectUp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign connected regions in a window — connectUp","text":"r poly RasterLayer  (e.g. 20 20 square). nRegion nRegion . regions (e.g. nRegion=3) seed Random seed.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/connectUp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign connected regions in a window — connectUp","text":"list selected polygons region.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/df_to_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data.frame to config.yml — df_to_config","title":"Convert a data.frame to config.yml — df_to_config","text":"Convert data.frame config.yml","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/df_to_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data.frame to config.yml — df_to_config","text":"","code":"df_to_config(x, parameter_file = \"config.yml\")"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/df_to_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data.frame to config.yml — df_to_config","text":"x data.frame two columns (parameters value) parameter_file name config file. Default = config.yml","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/df_to_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data.frame to config.yml — df_to_config","text":"config.yml file","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/df_to_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data.frame to config.yml — df_to_config","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(     parameters = c(\"expression_data_file\", \"num_simulated_cells\"),     value = c(\"fake1_expr.Rdata\", 10000)) df_to_config(df) } # }"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_Gaussian_copula.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a Gaussian copula model for a count matrix of a single cell type — fit_Gaussian_copula","title":"Fit a Gaussian copula model for a count matrix of a single cell type — fit_Gaussian_copula","text":"Fit Gaussian copula model count matrix single cell type","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_Gaussian_copula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a Gaussian copula model for a count matrix of a single cell type — fit_Gaussian_copula","text":"","code":"fit_Gaussian_copula(   x,   marginal = c(\"auto_choose\", \"zinb\", \"nb\", \"poisson\"),   jitter = TRUE,   zp_cutoff = 0.9,   min_nonzero_num = 2 )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_Gaussian_copula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a Gaussian copula model for a count matrix of a single cell type — fit_Gaussian_copula","text":"x matrix shape p n contains count values. marginal Specification types marginal distribution. Default value 'auto_choose' chooses ZINB, NB, ZIP Poisson likelihood ratio test (lrt) whether underdispersion. 'zinb' fit ZINB model. underdispersion, choose ZIP Poisson lrt. Otherwise, try fit ZINB model. case, zero error occurs, fit NB model instead. 'nb' fits NB model chooses NB Poisson depending whether underdispersion. 'poisson' simply fits Poisson model. jitter Logical, whether random projection performed distributional transform. zp_cutoff maximum propotion zero allowed gene included joint copula model. min_nonzero_num minimum number non-zero values required gene fitted marginal model.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_Gaussian_copula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a Gaussian copula model for a count matrix of a single cell type — fit_Gaussian_copula","text":"genes x partitioned three groups. first group contains genes whose zero proportion less zp_cutoff. second group contains genes whose zero proportion greater zp_cutoff still contains least min_nonzero_num non-zero values. third last group contains rest genes. first group, joint Gaussian copula model fitted. second group, marginal distribution gene fitted. last group, model fitted index genes recorded. list contains fitted model returned contains following components. cov_mat fitted covariance (equivalently case, correlation) matrix Gaussin copula model. marginal_param1 matrix parameters marginal distributions genes group one. marginal_param2 matrix parameters marginal distributions genes group two. gene_sel1 numeric vector row indices genes group one. gene_sel2 numeric vector row indices genes group two. gene_sel3 numeric vector row indices genes group three. zp_cutoff input. min_non_zero_num input. sim_method character string says 'copula'. distinguished (w/o copula) model.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_marginals.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the marginal distributions for each row of a count matrix — fit_marginals","title":"Fit the marginal distributions for each row of a count matrix — fit_marginals","text":"Fit marginal distributions row count matrix","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_marginals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the marginal distributions for each row of a count matrix — fit_marginals","text":"","code":"fit_marginals(   x,   marginal = c(\"auto_choose\", \"zinb\", \"nb\", \"poisson\"),   pval_cutoff = 0.05,   epsilon = 1e-05,   jitter = TRUE,   DT = TRUE )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_marginals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the marginal distributions for each row of a count matrix — fit_marginals","text":"x matrix shape p n contains count values. marginal Specification types marginal distribution. Default value 'auto_choose' chooses ZINB, NB, ZIP Poisson likelihood ratio test (lrt) whether underdispersion. 'zinb' fit ZINB model. underdispersion, choose ZIP Poisson lrt. Otherwise, try fit ZINB model. case, zero error occurs, fit NB model instead. 'nb' fits NB model chooses NB Poisson depending whether underdispersion. 'poisson' simply fits Poisson model. pval_cutoff Cutoff p-value lrt determines whether zero inflation. epsilon Threshold value preventing transformed quantile collapse 0 1. jitter Logical, whether random projection performed distributional transform. DT Logical, whether distributional transformed performed. set FALSE, returned object u NULL.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_marginals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the marginal distributions for each row of a count matrix — fit_marginals","text":"params matrix shape p 3. values column : ZI proportion, dispersion parameter (Poisson, Inf), mean parameter. u NULL matrix shape x, records transformed quantiles, DT.","code":"a list with the following components:"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_model_scDesign2.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit models for a count matrix — fit_model_scDesign2","title":"Fit models for a count matrix — fit_model_scDesign2","text":"Fit models count matrix","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_model_scDesign2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit models for a count matrix — fit_model_scDesign2","text":"","code":"fit_model_scDesign2(   data_mat,   cell_type_sel,   sim_method = c(\"copula\", \"ind\"),   marginal = c(\"auto_choose\", \"zinb\", \"nb\", \"poisson\"),   jitter = TRUE,   zp_cutoff = 0.9,   min_nonzero_num = 3,   ncores = 1 )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_model_scDesign2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit models for a count matrix — fit_model_scDesign2","text":"data_mat matrix shape p n contains count values. column names cell type names cell. column names also match cell_type_sel. cell_type_sel character vector contains selected cell types model fitted. sim_method Specification type model. Default value 'copula', selects copula model. 'ind' select (w/o copula) model. marginal Specification types marginal distribution. Default value 'auto_choose' chooses ZINB, NB, ZIP Poisson likelihood ratio test (lrt) whether underdispersion. 'zinb' fit ZINB model. underdispersion, choose ZIP Poisson lrt. Otherwise, try fit ZINB model. case, zero error occurs, fit NB model instead. 'nb' fits NB model chooses NB Poisson depending whether underdispersion. 'poisson' simply fits Poisson model. jitter Logical, whether random projection performed distributional transform. zp_cutoff maximum propotion zero allowed gene included joint copula model. min_nonzero_num minimum number non-zero values required gene fitted marginal model. ncores numeric value indicates number parallel cores model fitting. One core cell type.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_model_scDesign2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit models for a count matrix — fit_model_scDesign2","text":"list length cell_type_sel contains fitted model element.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_wo_copula.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a (w/o copula) model for a count matrix of a single cell type — fit_wo_copula","title":"Fit a (w/o copula) model for a count matrix of a single cell type — fit_wo_copula","text":"function fits marginal distribution gene.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_wo_copula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a (w/o copula) model for a count matrix of a single cell type — fit_wo_copula","text":"","code":"fit_wo_copula(   x,   marginal = c(\"auto_choose\", \"zinb\", \"nb\", \"poisson\"),   jitter = TRUE,   min_nonzero_num = 2 )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_wo_copula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a (w/o copula) model for a count matrix of a single cell type — fit_wo_copula","text":"x matrix shape p n contains count values. marginal Specification types marginal distribution. Default value 'auto_choose' chooses ZINB, NB, ZIP Poisson likelihood ratio test (lrt) whether underdispersion. 'zinb' fit ZINB model. underdispersion, choose ZIP Poisson lrt. Otherwise, try fit ZINB model. case, zero error occurs, fit NB model instead. 'nb' fits NB model chooses NB Poisson depending whether underdispersion. 'poisson' simply fits Poisson model. jitter Logical, whether random projection performed distributional transform. min_nonzero_num minimum number non-zero values required gene fitted marginal model.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/fit_wo_copula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a (w/o copula) model for a count matrix of a single cell type — fit_wo_copula","text":"genes x partitioned two groups. first group contains genes least min_non_zero_num non-zero values. second group contains genes. first group, marginal distribution gene fitted. last group, model fitted index genes recorded. list contains fitted model returned contains following components. marginal_param1 matrix parameters marginal distributions genes group one. gene_sel1 numeric vector row indices genes group one. gene_sel2 numeric vector row indices genes group two. min_non_zero_num input. sim_method character string says 'ind', short 'independent'. distinguished copula model.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/loadRData.html","id":null,"dir":"Reference","previous_headings":"","what":"load RData with new assigned file name — loadRData","title":"load RData with new assigned file name — loadRData","text":"Load RData new assigned file name","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/loadRData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load RData with new assigned file name — loadRData","text":"","code":"loadRData(fileName)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/loadRData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load RData with new assigned file name — loadRData","text":"fileName File name","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/loadRData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load RData with new assigned file name — loadRData","text":"Data","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/multicell.html","id":null,"dir":"Reference","previous_headings":"","what":"Assigns cells into spatial spots for multi-cell resolution data — multicell","title":"Assigns cells into spatial spots for multi-cell resolution data — multicell","text":"function assigns cells spatial spots. spot may contain zero, one, multiple cells. Spots zero cells output.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/multicell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assigns cells into spatial spots for multi-cell resolution data — multicell","text":"","code":"multicell(expr, spatial, NoSpot = 500, cl = 1)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/multicell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assigns cells into spatial spots for multi-cell resolution data — multicell","text":"expr expression profile cells spatial spatial features like spatial X Y coordinates. NoSpot Number targeted spots.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/multicell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assigns cells into spatial spots for multi-cell resolution data — multicell","text":"count: Expression profile spots. spot_feature: Spot feature spot center coordinates cell allocations within spots .","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/preprocessGiotto.html","id":null,"dir":"Reference","previous_headings":"","what":"Process SRT data using Giotto for CCI analysis. — preprocessGiotto","title":"Process SRT data using Giotto for CCI analysis. — preprocessGiotto","text":"function takes input data goes data processing procedures CCI analysis.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/preprocessGiotto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process SRT data using Giotto for CCI analysis. — preprocessGiotto","text":"","code":"preprocessGiotto(   expr_data,   spatial_data,   run_hvg = T,   run_kNN_network = F,   run_Delaunay_network = F,   run_Dist_network = F,   k = 5,   dis.cut = NULL )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/preprocessGiotto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process SRT data using Giotto for CCI analysis. — preprocessGiotto","text":"expr_data expr_data spatial_data spatial_data run_hvg run_hvg run_kNN_network Run K-nearest neighbor (kNN) based network. run_Delaunay_network Run Delaunay Triangulation-based network. run_Dist_network Run distance-based network. requires value distance cutoff. k . cells k kNN (Default =5). dis.cut Distance cutoff run distance-based network","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/run_interactive_sCCIgen.html","id":null,"dir":"Reference","previous_headings":"","what":"Run interactive sCCIgen — run_interactive_sCCIgen","title":"Run interactive sCCIgen — run_interactive_sCCIgen","text":"Run interactive sCCIgen","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/run_interactive_sCCIgen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run interactive sCCIgen — run_interactive_sCCIgen","text":"","code":"run_interactive_sCCIgen()"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/run_interactive_sCCIgen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run interactive sCCIgen — run_interactive_sCCIgen","text":"Either .yml parameter file simulated dataset. running simulation, individual .csv files counts cell features locally saved. Optionally, Giotto, Seurat, SpatialExperiment object created saved locally .RDS file.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_Giotto.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert sCCIgen output to a Giotto object — sCCIgen_to_Giotto","title":"Convert sCCIgen output to a Giotto object — sCCIgen_to_Giotto","text":"Convert sCCIgen output Giotto object","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_Giotto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert sCCIgen output to a Giotto object — sCCIgen_to_Giotto","text":"","code":"sCCIgen_to_Giotto(counts_file, metadata_file)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_Giotto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert sCCIgen output to a Giotto object — sCCIgen_to_Giotto","text":"counts_file path .tsv file gene x cell counts matrix. metadata_file path .tsv file metadata. file contain following columns: Cell, annotation, x.loc, y.loc, region.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_Giotto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert sCCIgen output to a Giotto object — sCCIgen_to_Giotto","text":"Giotto object","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_Giotto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert sCCIgen output to a Giotto object — sCCIgen_to_Giotto","text":"","code":"if (FALSE) { # \\dontrun{ giotto_object <- sCCIgen_to_Giotto(\"counts_file.tsv\", \"metadata_file.tsv\") } # }"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_Seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert sCCIgen output to a Seurat object — sCCIgen_to_Seurat","title":"Convert sCCIgen output to a Seurat object — sCCIgen_to_Seurat","text":"Convert sCCIgen output Seurat object","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_Seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert sCCIgen output to a Seurat object — sCCIgen_to_Seurat","text":"","code":"sCCIgen_to_Seurat(counts_file, metadata_file)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_Seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert sCCIgen output to a Seurat object — sCCIgen_to_Seurat","text":"counts_file path .tsv file gene x cell counts matrix. metadata_file path .tsv file metadata. file contain following columns: Cell, annotation, x.loc, y.loc, region.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_Seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert sCCIgen output to a Seurat object — sCCIgen_to_Seurat","text":"Seurat object","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_Seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert sCCIgen output to a Seurat object — sCCIgen_to_Seurat","text":"","code":"if (FALSE) { # \\dontrun{ seurat_object <- sCCIgen_to_Seurat(\"counts_file.tsv\", \"metadata_file.tsv\") } # }"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_SpatialExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert sCCIgen output to a SpatialExperiment object — sCCIgen_to_SpatialExperiment","title":"Convert sCCIgen output to a SpatialExperiment object — sCCIgen_to_SpatialExperiment","text":"Convert sCCIgen output SpatialExperiment object","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_SpatialExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert sCCIgen output to a SpatialExperiment object — sCCIgen_to_SpatialExperiment","text":"","code":"sCCIgen_to_SpatialExperiment(counts_file, metadata_file)"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_SpatialExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert sCCIgen output to a SpatialExperiment object — sCCIgen_to_SpatialExperiment","text":"counts_file path .tsv file gene x cell counts matrix. metadata_file path .tsv file metadata. file contain following columns: Cell, annotation, x.loc, y.loc, region.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_SpatialExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert sCCIgen output to a SpatialExperiment object — sCCIgen_to_SpatialExperiment","text":"SpatialExperiment object","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/sCCIgen_to_SpatialExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert sCCIgen output to a SpatialExperiment object — sCCIgen_to_SpatialExperiment","text":"","code":"if (FALSE) { # \\dontrun{ spe_object <- sCCIgen_to_SpatialExperiment(\"counts_file.tsv\", \"metadata_file.tsv\") } # }"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/scDesign2.revised.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a count matrix for a single cell type — scDesign2.revised","title":"Simulate a count matrix for a single cell type — scDesign2.revised","text":"Revise initial scDesign2 functions allow different sequencing depth","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/scDesign2.revised.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a count matrix for a single cell type — scDesign2.revised","text":"","code":"scDesign2.revised(   model_params,   n_cell_new,   cell_type_prop,   depth_simu_ref_ratio = NULL,   sim_method = c(\"copula\", \"ind\") )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/scDesign2.revised.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a count matrix for a single cell type — scDesign2.revised","text":"model_params list length cell_type_prop contains fitted model element (can either copula model (w/o copula) model). n_cell_new total number cells simulated count matrix. cell_type_prop cell type proportion simulated count matrix. depth_simu_ref_ratio (expected) sequencing depth ratio simulated refernece data. sim_method Simulation method. Simulate genes independently 'ind' considering correlations ('copula').","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/scDesign2.revised.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a count matrix for a single cell type — scDesign2.revised","text":"matrix shape p n contains simulated count values. p derived model_params.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simu.window.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate the window of spatial data — simu.window","title":"Simulate the window of spatial data — simu.window","text":"function esimates window using spatial location data existing cells.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simu.window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate the window of spatial data — simu.window","text":"","code":"simu.window(   PointLoc,   method = c(\"network\", \"convex\", \"convex2\", \"convex3\", \"convex5\", \"rectangle\") )"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simu.window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate the window of spatial data — simu.window","text":"PointLoc location input cells x, y axis. method Options include method=c(\"network\", \"convex\", \"convex2\", \"convex3\", \"convex5\", \"rectangle\"). Network preferred unless input data large.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simu.window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate the window of spatial data — simu.window","text":"spatial window input cells.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simulate_count_copula.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a count matrix for a single cell type based on a copula model — simulate_count_copula","title":"Simulate a count matrix for a single cell type based on a copula model — simulate_count_copula","text":"Simulate count matrix single cell type based copula model","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simulate_count_copula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a count matrix for a single cell type based on a copula model — simulate_count_copula","text":"","code":"simulate_count_copula(copula_result, n = 100, marginal = c(\"nb\", \"Gamma\"))"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simulate_count_copula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a count matrix for a single cell type based on a copula model — simulate_count_copula","text":"copula_result list contains parameters copula model. n integer value indicates number cells generate. marginal character string indicates whether generated values stay discrete switch continuous. Default value 'nb', used generating count marix. alternative 'Gamma' needed function called functions generate data user-specified sequencing depth. Normally, users need change value.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simulate_count_copula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a count matrix for a single cell type based on a copula model — simulate_count_copula","text":"matrix shape p n contains simulated count values. p derived copula_result","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simulate_count_ind.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a count matrix for a single cell type based on a (w/o copula model) — simulate_count_ind","title":"Simulate a count matrix for a single cell type based on a (w/o copula model) — simulate_count_ind","text":"Simulate count matrix single cell type based (w/o copula model)","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simulate_count_ind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a count matrix for a single cell type based on a (w/o copula model) — simulate_count_ind","text":"","code":"simulate_count_ind(model_params, n = 100, marginal = c(\"nb\", \"Gamma\"))"},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simulate_count_ind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a count matrix for a single cell type based on a (w/o copula model) — simulate_count_ind","text":"model_params list contains model parameters (can either copula model (w/o copula) model). n integer value indicates number cells generate. marginal character string indicates whether generated values stay discrete switch continuous. Default value 'nb', used generating count marix. alternative 'Gamma' needed function called functions generate data user-specified sequencing depth. Normally, users need change value.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/reference/simulate_count_ind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a count matrix for a single cell type based on a (w/o copula model) — simulate_count_ind","text":"matrix shape p n contains simulated count values. p derived model_params.","code":""},{"path":[]},{"path":"https://songxiaoyu.github.io/sCCIgen/news/index.html","id":"changes-1-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"sCCIgen 1.0","text":"Functions require reading values parameter file adapted read configuration .yml file.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/news/index.html","id":"bug-fixes-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"sCCIgen 1.0","text":"fix error reading cell-cell interaction file shiny.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/news/index.html","id":"enhancements-1-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"sCCIgen 1.0","text":"Simulation takes now account cell-cell communication.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/news/index.html","id":"new-1-0","dir":"Changelog","previous_headings":"","what":"New","title":"sCCIgen 1.0","text":"df_to_config() converts data.frame parameter file .yml configuration file. sCCIgen_to_Giotto() converts default sCCIgen output Giotto object. sCCIgen_to_Seurat() converts default sCCIgen output Seurat object. sCCIgen_to_SpatialExperiment() converts default sCCIgen output SpatialExperiment object.","code":""},{"path":"https://songxiaoyu.github.io/sCCIgen/news/index.html","id":"sccigen-099","dir":"Changelog","previous_headings":"","what":"sCCIgen 0.99","title":"sCCIgen 0.99","text":"First public version sCCIgen simulator.","code":""}]
